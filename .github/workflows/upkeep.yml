# Code generated by dhall-to-yaml.  DO NOT EDIT.
jobs:
  augmax:
    runs-on: ubuntu-latest
    steps:
      - name: Maximize disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo docker image prune --all --force
      - run: lscpu
      - uses: "cachix/install-nix-action@v22"
        with:
          extra_nix_config: experimental-features = nix-command flakes
          nix_path: nixpkgs=channel:nixos-unstable
      - name: nix-info
        run: "nix-shell -p nix-info --run 'nix-info -m'"
      - uses: "cachix/cachix-action@v12"
        with:
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          name: ploop
      - name: Checkout nixpkgs-upkeep
        uses: "actions/checkout@v3"
        with:
          path: nixpkgs-upkeep
      - name: Checkout nixpkgs
        uses: "actions/checkout@v3"
        with:
          path: nixpkgs
          repository: NixOS/nixpkgs
          token: "${{ secrets.GH_TOKEN }}"
      - name: Add CUDA/MKL overlay
        run: |
          mkdir -p ~/.config/nixpkgs/overlays/
          cp ./nixpkgs-upkeep/overlay.nix ~/.config/nixpkgs/overlays/
      - name: "Set ~/.config/nixpkgs/config.nix"
        run: |
          mkdir -p ~/.config/nixpkgs/
          echo '{ allowUnfree = true; cudaSupport = true; cudaCapabilities = ["8.0"]; }' > ~/.config/nixpkgs/config.nix
      - name: Check current package version
        run: |
          PRE_VERSION="$(nix eval --raw --file . python3Packages.augmax.version)"
          echo "Current version: $PRE_VERSION"
          echo "PRE_VERSION=$PRE_VERSION" >> $GITHUB_ENV
        working-directory: "./nixpkgs"
      - env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        name: build canary
        run: |
          GH_TOKEN=$GH_TOKEN ./canary.py --nixpkgs ../nixpkgs --attr python3Packages.augmax
        working-directory: "./nixpkgs-upkeep"
  einops:
    runs-on: ubuntu-latest
    steps:
      - name: Maximize disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo docker image prune --all --force
      - run: lscpu
      - uses: "cachix/install-nix-action@v22"
        with:
          extra_nix_config: experimental-features = nix-command flakes
          nix_path: nixpkgs=channel:nixos-unstable
      - name: nix-info
        run: "nix-shell -p nix-info --run 'nix-info -m'"
      - uses: "cachix/cachix-action@v12"
        with:
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          name: ploop
      - name: Checkout nixpkgs-upkeep
        uses: "actions/checkout@v3"
        with:
          path: nixpkgs-upkeep
      - name: Checkout nixpkgs
        uses: "actions/checkout@v3"
        with:
          path: nixpkgs
          repository: NixOS/nixpkgs
          token: "${{ secrets.GH_TOKEN }}"
      - name: Add CUDA/MKL overlay
        run: |
          mkdir -p ~/.config/nixpkgs/overlays/
          cp ./nixpkgs-upkeep/overlay.nix ~/.config/nixpkgs/overlays/
      - name: "Set ~/.config/nixpkgs/config.nix"
        run: |
          mkdir -p ~/.config/nixpkgs/
          echo '{ allowUnfree = true; cudaSupport = true; cudaCapabilities = ["8.0"]; }' > ~/.config/nixpkgs/config.nix
      - name: Check current package version
        run: |
          PRE_VERSION="$(nix eval --raw --file . python3Packages.einops.version)"
          echo "Current version: $PRE_VERSION"
          echo "PRE_VERSION=$PRE_VERSION" >> $GITHUB_ENV
        working-directory: "./nixpkgs"
      - env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        name: build canary
        run: |
          GH_TOKEN=$GH_TOKEN ./canary.py --nixpkgs ../nixpkgs --attr python3Packages.einops
        working-directory: "./nixpkgs-upkeep"
  flax:
    runs-on: ubuntu-latest
    steps:
      - name: Maximize disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo docker image prune --all --force
      - run: lscpu
      - uses: "cachix/install-nix-action@v22"
        with:
          extra_nix_config: experimental-features = nix-command flakes
          nix_path: nixpkgs=channel:nixos-unstable
      - name: nix-info
        run: "nix-shell -p nix-info --run 'nix-info -m'"
      - uses: "cachix/cachix-action@v12"
        with:
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          name: ploop
      - name: Checkout nixpkgs-upkeep
        uses: "actions/checkout@v3"
        with:
          path: nixpkgs-upkeep
      - name: Checkout nixpkgs
        uses: "actions/checkout@v3"
        with:
          path: nixpkgs
          repository: NixOS/nixpkgs
          token: "${{ secrets.GH_TOKEN }}"
      - name: Add CUDA/MKL overlay
        run: |
          mkdir -p ~/.config/nixpkgs/overlays/
          cp ./nixpkgs-upkeep/overlay.nix ~/.config/nixpkgs/overlays/
      - name: "Set ~/.config/nixpkgs/config.nix"
        run: |
          mkdir -p ~/.config/nixpkgs/
          echo '{ allowUnfree = true; cudaSupport = true; cudaCapabilities = ["8.0"]; }' > ~/.config/nixpkgs/config.nix
      - name: Check current package version
        run: |
          PRE_VERSION="$(nix eval --raw --file . python3Packages.flax.version)"
          echo "Current version: $PRE_VERSION"
          echo "PRE_VERSION=$PRE_VERSION" >> $GITHUB_ENV
        working-directory: "./nixpkgs"
      - env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        name: build canary
        run: |
          GH_TOKEN=$GH_TOKEN ./canary.py --nixpkgs ../nixpkgs --attr python3Packages.flax
        working-directory: "./nixpkgs-upkeep"
  ipython:
    runs-on: ubuntu-latest
    steps:
      - name: Maximize disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo docker image prune --all --force
      - run: lscpu
      - uses: "cachix/install-nix-action@v22"
        with:
          extra_nix_config: experimental-features = nix-command flakes
          nix_path: nixpkgs=channel:nixos-unstable
      - name: nix-info
        run: "nix-shell -p nix-info --run 'nix-info -m'"
      - uses: "cachix/cachix-action@v12"
        with:
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          name: ploop
      - name: Checkout nixpkgs-upkeep
        uses: "actions/checkout@v3"
        with:
          path: nixpkgs-upkeep
      - name: Checkout nixpkgs
        uses: "actions/checkout@v3"
        with:
          path: nixpkgs
          repository: NixOS/nixpkgs
          token: "${{ secrets.GH_TOKEN }}"
      - name: Add CUDA/MKL overlay
        run: |
          mkdir -p ~/.config/nixpkgs/overlays/
          cp ./nixpkgs-upkeep/overlay.nix ~/.config/nixpkgs/overlays/
      - name: "Set ~/.config/nixpkgs/config.nix"
        run: |
          mkdir -p ~/.config/nixpkgs/
          echo '{ allowUnfree = true; cudaSupport = true; cudaCapabilities = ["8.0"]; }' > ~/.config/nixpkgs/config.nix
      - name: Check current package version
        run: |
          PRE_VERSION="$(nix eval --raw --file . python3Packages.ipython.version)"
          echo "Current version: $PRE_VERSION"
          echo "PRE_VERSION=$PRE_VERSION" >> $GITHUB_ENV
        working-directory: "./nixpkgs"
      - env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        name: build canary
        run: |
          GH_TOKEN=$GH_TOKEN ./canary.py --nixpkgs ../nixpkgs --attr python3Packages.ipython
        working-directory: "./nixpkgs-upkeep"
  jax:
    runs-on: ubuntu-latest
    steps:
      - name: Maximize disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo docker image prune --all --force
      - run: lscpu
      - uses: "cachix/install-nix-action@v22"
        with:
          extra_nix_config: experimental-features = nix-command flakes
          nix_path: nixpkgs=channel:nixos-unstable
      - name: nix-info
        run: "nix-shell -p nix-info --run 'nix-info -m'"
      - uses: "cachix/cachix-action@v12"
        with:
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          name: ploop
      - name: Checkout nixpkgs-upkeep
        uses: "actions/checkout@v3"
        with:
          path: nixpkgs-upkeep
      - name: Checkout nixpkgs
        uses: "actions/checkout@v3"
        with:
          path: nixpkgs
          repository: NixOS/nixpkgs
          token: "${{ secrets.GH_TOKEN }}"
      - name: Add CUDA/MKL overlay
        run: |
          mkdir -p ~/.config/nixpkgs/overlays/
          cp ./nixpkgs-upkeep/overlay.nix ~/.config/nixpkgs/overlays/
      - name: "Set ~/.config/nixpkgs/config.nix"
        run: |
          mkdir -p ~/.config/nixpkgs/
          echo '{ allowUnfree = true; cudaSupport = true; cudaCapabilities = ["8.0"]; }' > ~/.config/nixpkgs/config.nix
      - name: Check current package version
        run: |
          PRE_VERSION="$(nix eval --raw --file . python3Packages.jax.version)"
          echo "Current version: $PRE_VERSION"
          echo "PRE_VERSION=$PRE_VERSION" >> $GITHUB_ENV
        working-directory: "./nixpkgs"
      - env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        name: build canary
        run: |
          GH_TOKEN=$GH_TOKEN ./canary.py --nixpkgs ../nixpkgs --attr python3Packages.jax
        working-directory: "./nixpkgs-upkeep"
  jaxlib:
    runs-on: ubuntu-latest
    steps:
      - name: Maximize disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo docker image prune --all --force
      - run: lscpu
      - uses: "cachix/install-nix-action@v22"
        with:
          extra_nix_config: experimental-features = nix-command flakes
          nix_path: nixpkgs=channel:nixos-unstable
      - name: nix-info
        run: "nix-shell -p nix-info --run 'nix-info -m'"
      - uses: "cachix/cachix-action@v12"
        with:
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          name: ploop
      - name: Checkout nixpkgs-upkeep
        uses: "actions/checkout@v3"
        with:
          path: nixpkgs-upkeep
      - name: Checkout nixpkgs
        uses: "actions/checkout@v3"
        with:
          path: nixpkgs
          repository: NixOS/nixpkgs
          token: "${{ secrets.GH_TOKEN }}"
      - name: Add CUDA/MKL overlay
        run: |
          mkdir -p ~/.config/nixpkgs/overlays/
          cp ./nixpkgs-upkeep/overlay.nix ~/.config/nixpkgs/overlays/
      - name: "Set ~/.config/nixpkgs/config.nix"
        run: |
          mkdir -p ~/.config/nixpkgs/
          echo '{ allowUnfree = true; cudaSupport = true; cudaCapabilities = ["8.0"]; }' > ~/.config/nixpkgs/config.nix
      - name: Check current package version
        run: |
          PRE_VERSION="$(nix eval --raw --file . python3Packages.jaxlib.version)"
          echo "Current version: $PRE_VERSION"
          echo "PRE_VERSION=$PRE_VERSION" >> $GITHUB_ENV
        working-directory: "./nixpkgs"
      - env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        name: build canary
        run: |
          GH_TOKEN=$GH_TOKEN ./canary.py --nixpkgs ../nixpkgs --attr python3Packages.jaxlib
        working-directory: "./nixpkgs-upkeep"
  jaxlib-bin:
    runs-on: ubuntu-latest
    steps:
      - name: Maximize disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo docker image prune --all --force
      - run: lscpu
      - uses: "cachix/install-nix-action@v22"
        with:
          extra_nix_config: experimental-features = nix-command flakes
          nix_path: nixpkgs=channel:nixos-unstable
      - name: nix-info
        run: "nix-shell -p nix-info --run 'nix-info -m'"
      - uses: "cachix/cachix-action@v12"
        with:
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          name: ploop
      - name: Checkout nixpkgs-upkeep
        uses: "actions/checkout@v3"
        with:
          path: nixpkgs-upkeep
      - name: Checkout nixpkgs
        uses: "actions/checkout@v3"
        with:
          path: nixpkgs
          repository: NixOS/nixpkgs
          token: "${{ secrets.GH_TOKEN }}"
      - name: Add CUDA/MKL overlay
        run: |
          mkdir -p ~/.config/nixpkgs/overlays/
          cp ./nixpkgs-upkeep/overlay.nix ~/.config/nixpkgs/overlays/
      - name: "Set ~/.config/nixpkgs/config.nix"
        run: |
          mkdir -p ~/.config/nixpkgs/
          echo '{ allowUnfree = true; cudaSupport = true; cudaCapabilities = ["8.0"]; }' > ~/.config/nixpkgs/config.nix
      - name: Check current package version
        run: |
          PRE_VERSION="$(nix eval --raw --file . python3Packages.jaxlib-bin.version)"
          echo "Current version: $PRE_VERSION"
          echo "PRE_VERSION=$PRE_VERSION" >> $GITHUB_ENV
        working-directory: "./nixpkgs"
      - env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        name: build canary
        run: |
          GH_TOKEN=$GH_TOKEN ./canary.py --nixpkgs ../nixpkgs --attr python3Packages.jaxlib-bin
        working-directory: "./nixpkgs-upkeep"
  jaxlibWithCuda:
    runs-on: ubuntu-latest
    steps:
      - name: Maximize disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo docker image prune --all --force
      - run: lscpu
      - uses: "cachix/install-nix-action@v22"
        with:
          extra_nix_config: experimental-features = nix-command flakes
          nix_path: nixpkgs=channel:nixos-unstable
      - name: nix-info
        run: "nix-shell -p nix-info --run 'nix-info -m'"
      - uses: "cachix/cachix-action@v12"
        with:
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          name: ploop
      - name: Checkout nixpkgs-upkeep
        uses: "actions/checkout@v3"
        with:
          path: nixpkgs-upkeep
      - name: Checkout nixpkgs
        uses: "actions/checkout@v3"
        with:
          path: nixpkgs
          repository: NixOS/nixpkgs
          token: "${{ secrets.GH_TOKEN }}"
      - name: Add CUDA/MKL overlay
        run: |
          mkdir -p ~/.config/nixpkgs/overlays/
          cp ./nixpkgs-upkeep/overlay.nix ~/.config/nixpkgs/overlays/
      - name: "Set ~/.config/nixpkgs/config.nix"
        run: |
          mkdir -p ~/.config/nixpkgs/
          echo '{ allowUnfree = true; cudaSupport = true; cudaCapabilities = ["8.0"]; }' > ~/.config/nixpkgs/config.nix
      - name: Check current package version
        run: |
          PRE_VERSION="$(nix eval --raw --file . python3Packages.jaxlibWithCuda.version)"
          echo "Current version: $PRE_VERSION"
          echo "PRE_VERSION=$PRE_VERSION" >> $GITHUB_ENV
        working-directory: "./nixpkgs"
      - env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        name: build canary
        run: |
          GH_TOKEN=$GH_TOKEN ./canary.py --nixpkgs ../nixpkgs --attr python3Packages.jaxlibWithCuda
        working-directory: "./nixpkgs-upkeep"
  matplotlib:
    runs-on: ubuntu-latest
    steps:
      - name: Maximize disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo docker image prune --all --force
      - run: lscpu
      - uses: "cachix/install-nix-action@v22"
        with:
          extra_nix_config: experimental-features = nix-command flakes
          nix_path: nixpkgs=channel:nixos-unstable
      - name: nix-info
        run: "nix-shell -p nix-info --run 'nix-info -m'"
      - uses: "cachix/cachix-action@v12"
        with:
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          name: ploop
      - name: Checkout nixpkgs-upkeep
        uses: "actions/checkout@v3"
        with:
          path: nixpkgs-upkeep
      - name: Checkout nixpkgs
        uses: "actions/checkout@v3"
        with:
          path: nixpkgs
          repository: NixOS/nixpkgs
          token: "${{ secrets.GH_TOKEN }}"
      - name: Add CUDA/MKL overlay
        run: |
          mkdir -p ~/.config/nixpkgs/overlays/
          cp ./nixpkgs-upkeep/overlay.nix ~/.config/nixpkgs/overlays/
      - name: "Set ~/.config/nixpkgs/config.nix"
        run: |
          mkdir -p ~/.config/nixpkgs/
          echo '{ allowUnfree = true; cudaSupport = true; cudaCapabilities = ["8.0"]; }' > ~/.config/nixpkgs/config.nix
      - name: Check current package version
        run: |
          PRE_VERSION="$(nix eval --raw --file . python3Packages.matplotlib.version)"
          echo "Current version: $PRE_VERSION"
          echo "PRE_VERSION=$PRE_VERSION" >> $GITHUB_ENV
        working-directory: "./nixpkgs"
      - env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        name: build canary
        run: |
          GH_TOKEN=$GH_TOKEN ./canary.py --nixpkgs ../nixpkgs --attr python3Packages.matplotlib
        working-directory: "./nixpkgs-upkeep"
  optax:
    runs-on: ubuntu-latest
    steps:
      - name: Maximize disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo docker image prune --all --force
      - run: lscpu
      - uses: "cachix/install-nix-action@v22"
        with:
          extra_nix_config: experimental-features = nix-command flakes
          nix_path: nixpkgs=channel:nixos-unstable
      - name: nix-info
        run: "nix-shell -p nix-info --run 'nix-info -m'"
      - uses: "cachix/cachix-action@v12"
        with:
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          name: ploop
      - name: Checkout nixpkgs-upkeep
        uses: "actions/checkout@v3"
        with:
          path: nixpkgs-upkeep
      - name: Checkout nixpkgs
        uses: "actions/checkout@v3"
        with:
          path: nixpkgs
          repository: NixOS/nixpkgs
          token: "${{ secrets.GH_TOKEN }}"
      - name: Add CUDA/MKL overlay
        run: |
          mkdir -p ~/.config/nixpkgs/overlays/
          cp ./nixpkgs-upkeep/overlay.nix ~/.config/nixpkgs/overlays/
      - name: "Set ~/.config/nixpkgs/config.nix"
        run: |
          mkdir -p ~/.config/nixpkgs/
          echo '{ allowUnfree = true; cudaSupport = true; cudaCapabilities = ["8.0"]; }' > ~/.config/nixpkgs/config.nix
      - name: Check current package version
        run: |
          PRE_VERSION="$(nix eval --raw --file . python3Packages.optax.version)"
          echo "Current version: $PRE_VERSION"
          echo "PRE_VERSION=$PRE_VERSION" >> $GITHUB_ENV
        working-directory: "./nixpkgs"
      - env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        name: build canary
        run: |
          GH_TOKEN=$GH_TOKEN ./canary.py --nixpkgs ../nixpkgs --attr python3Packages.optax
        working-directory: "./nixpkgs-upkeep"
  pandas:
    runs-on: ubuntu-latest
    steps:
      - name: Maximize disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo docker image prune --all --force
      - run: lscpu
      - uses: "cachix/install-nix-action@v22"
        with:
          extra_nix_config: experimental-features = nix-command flakes
          nix_path: nixpkgs=channel:nixos-unstable
      - name: nix-info
        run: "nix-shell -p nix-info --run 'nix-info -m'"
      - uses: "cachix/cachix-action@v12"
        with:
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          name: ploop
      - name: Checkout nixpkgs-upkeep
        uses: "actions/checkout@v3"
        with:
          path: nixpkgs-upkeep
      - name: Checkout nixpkgs
        uses: "actions/checkout@v3"
        with:
          path: nixpkgs
          repository: NixOS/nixpkgs
          token: "${{ secrets.GH_TOKEN }}"
      - name: Add CUDA/MKL overlay
        run: |
          mkdir -p ~/.config/nixpkgs/overlays/
          cp ./nixpkgs-upkeep/overlay.nix ~/.config/nixpkgs/overlays/
      - name: "Set ~/.config/nixpkgs/config.nix"
        run: |
          mkdir -p ~/.config/nixpkgs/
          echo '{ allowUnfree = true; cudaSupport = true; cudaCapabilities = ["8.0"]; }' > ~/.config/nixpkgs/config.nix
      - name: Check current package version
        run: |
          PRE_VERSION="$(nix eval --raw --file . python3Packages.pandas.version)"
          echo "Current version: $PRE_VERSION"
          echo "PRE_VERSION=$PRE_VERSION" >> $GITHUB_ENV
        working-directory: "./nixpkgs"
      - env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        name: build canary
        run: |
          GH_TOKEN=$GH_TOKEN ./canary.py --nixpkgs ../nixpkgs --attr python3Packages.pandas
        working-directory: "./nixpkgs-upkeep"
  plexamp:
    runs-on: ubuntu-latest
    steps:
      - name: Maximize disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo docker image prune --all --force
      - run: lscpu
      - uses: "cachix/install-nix-action@v22"
        with:
          extra_nix_config: experimental-features = nix-command flakes
          nix_path: nixpkgs=channel:nixos-unstable
      - name: nix-info
        run: "nix-shell -p nix-info --run 'nix-info -m'"
      - uses: "cachix/cachix-action@v12"
        with:
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          name: ploop
      - name: Checkout nixpkgs-upkeep
        uses: "actions/checkout@v3"
        with:
          path: nixpkgs-upkeep
      - name: Checkout nixpkgs
        uses: "actions/checkout@v3"
        with:
          path: nixpkgs
          repository: NixOS/nixpkgs
          token: "${{ secrets.GH_TOKEN }}"
      - name: Add CUDA/MKL overlay
        run: |
          mkdir -p ~/.config/nixpkgs/overlays/
          cp ./nixpkgs-upkeep/overlay.nix ~/.config/nixpkgs/overlays/
      - name: "Set ~/.config/nixpkgs/config.nix"
        run: |
          mkdir -p ~/.config/nixpkgs/
          echo '{ allowUnfree = true; cudaSupport = true; cudaCapabilities = ["8.0"]; }' > ~/.config/nixpkgs/config.nix
      - name: Check current package version before update script
        run: |
          PRE_VERSION="$(nix-instantiate --eval -E "with import ./. {}; lib.getVersion plexamp" --json | jq -r)"
          echo "PRE_VERSION=$PRE_VERSION" >> $GITHUB_ENV
        working-directory: "./nixpkgs"
      - run: "./nixpkgs/pkgs/applications/audio/plexamp/update-plexamp.sh"
      - run: git diff
        working-directory: "./nixpkgs"
      - env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        name: Create PR
        run: |
          GH_TOKEN="$GH_TOKEN" \
            PACKAGE="plexamp" \
            PRE_VERSION="$PRE_VERSION" \
            GITHUB_WORKFLOW_URL="https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" \
            ./../nixpkgs-upkeep/create-pr.sh
        working-directory: "./nixpkgs"
  plotly:
    runs-on: ubuntu-latest
    steps:
      - name: Maximize disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo docker image prune --all --force
      - run: lscpu
      - uses: "cachix/install-nix-action@v22"
        with:
          extra_nix_config: experimental-features = nix-command flakes
          nix_path: nixpkgs=channel:nixos-unstable
      - name: nix-info
        run: "nix-shell -p nix-info --run 'nix-info -m'"
      - uses: "cachix/cachix-action@v12"
        with:
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          name: ploop
      - name: Checkout nixpkgs-upkeep
        uses: "actions/checkout@v3"
        with:
          path: nixpkgs-upkeep
      - name: Checkout nixpkgs
        uses: "actions/checkout@v3"
        with:
          path: nixpkgs
          repository: NixOS/nixpkgs
          token: "${{ secrets.GH_TOKEN }}"
      - name: Add CUDA/MKL overlay
        run: |
          mkdir -p ~/.config/nixpkgs/overlays/
          cp ./nixpkgs-upkeep/overlay.nix ~/.config/nixpkgs/overlays/
      - name: "Set ~/.config/nixpkgs/config.nix"
        run: |
          mkdir -p ~/.config/nixpkgs/
          echo '{ allowUnfree = true; cudaSupport = true; cudaCapabilities = ["8.0"]; }' > ~/.config/nixpkgs/config.nix
      - name: Check current package version
        run: |
          PRE_VERSION="$(nix eval --raw --file . python3Packages.plotly.version)"
          echo "Current version: $PRE_VERSION"
          echo "PRE_VERSION=$PRE_VERSION" >> $GITHUB_ENV
        working-directory: "./nixpkgs"
      - env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        name: build canary
        run: |
          GH_TOKEN=$GH_TOKEN ./canary.py --nixpkgs ../nixpkgs --attr python3Packages.plotly
        working-directory: "./nixpkgs-upkeep"
  spotify:
    runs-on: ubuntu-latest
    steps:
      - name: Maximize disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo docker image prune --all --force
      - run: lscpu
      - uses: "cachix/install-nix-action@v22"
        with:
          extra_nix_config: experimental-features = nix-command flakes
          nix_path: nixpkgs=channel:nixos-unstable
      - name: nix-info
        run: "nix-shell -p nix-info --run 'nix-info -m'"
      - uses: "cachix/cachix-action@v12"
        with:
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          name: ploop
      - name: Checkout nixpkgs-upkeep
        uses: "actions/checkout@v3"
        with:
          path: nixpkgs-upkeep
      - name: Checkout nixpkgs
        uses: "actions/checkout@v3"
        with:
          path: nixpkgs
          repository: NixOS/nixpkgs
          token: "${{ secrets.GH_TOKEN }}"
      - name: Add CUDA/MKL overlay
        run: |
          mkdir -p ~/.config/nixpkgs/overlays/
          cp ./nixpkgs-upkeep/overlay.nix ~/.config/nixpkgs/overlays/
      - name: "Set ~/.config/nixpkgs/config.nix"
        run: |
          mkdir -p ~/.config/nixpkgs/
          echo '{ allowUnfree = true; cudaSupport = true; cudaCapabilities = ["8.0"]; }' > ~/.config/nixpkgs/config.nix
      - name: Check current package version
        run: |
          PRE_VERSION="$(nix eval --raw --file . spotify-unwrapped.version)"
          echo "Current version: $PRE_VERSION"
          echo "PRE_VERSION=$PRE_VERSION" >> $GITHUB_ENV
        working-directory: "./nixpkgs"
      - name: Run custom update-script
        run: |
          git config --global user.email "foo@bar.com"
          git config --global user.name "upkeep-bot"
          before_commit=$(git rev-parse HEAD)
          ./pkgs/applications/audio/spotify/update.sh
          after_commit=$(git rev-parse HEAD)
          if [ $before_commit != $after_commit ]; then
            git reset "HEAD^"
          fi
        working-directory: "./nixpkgs"
      - run: git diff
        working-directory: "./nixpkgs"
      - env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        name: Create PR
        run: |
          GH_TOKEN="$GH_TOKEN" \
            PACKAGE="spotify-unwrapped" \
            PRE_VERSION="$PRE_VERSION" \
            GITHUB_WORKFLOW_URL="https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" \
            ./../nixpkgs-upkeep/create-pr.sh
        working-directory: "./nixpkgs"
  tensorflow:
    runs-on: ubuntu-latest
    steps:
      - name: Maximize disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo docker image prune --all --force
      - run: lscpu
      - uses: "cachix/install-nix-action@v22"
        with:
          extra_nix_config: experimental-features = nix-command flakes
          nix_path: nixpkgs=channel:nixos-unstable
      - name: nix-info
        run: "nix-shell -p nix-info --run 'nix-info -m'"
      - uses: "cachix/cachix-action@v12"
        with:
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          name: ploop
      - name: Checkout nixpkgs-upkeep
        uses: "actions/checkout@v3"
        with:
          path: nixpkgs-upkeep
      - name: Checkout nixpkgs
        uses: "actions/checkout@v3"
        with:
          path: nixpkgs
          repository: NixOS/nixpkgs
          token: "${{ secrets.GH_TOKEN }}"
      - name: Add CUDA/MKL overlay
        run: |
          mkdir -p ~/.config/nixpkgs/overlays/
          cp ./nixpkgs-upkeep/overlay.nix ~/.config/nixpkgs/overlays/
      - name: "Set ~/.config/nixpkgs/config.nix"
        run: |
          mkdir -p ~/.config/nixpkgs/
          echo '{ allowUnfree = true; cudaSupport = true; cudaCapabilities = ["8.0"]; }' > ~/.config/nixpkgs/config.nix
      - name: Check current package version
        run: |
          PRE_VERSION="$(nix eval --raw --file . python3Packages.tensorflow.version)"
          echo "Current version: $PRE_VERSION"
          echo "PRE_VERSION=$PRE_VERSION" >> $GITHUB_ENV
        working-directory: "./nixpkgs"
      - env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        name: build canary
        run: |
          GH_TOKEN=$GH_TOKEN ./canary.py --nixpkgs ../nixpkgs --attr python3Packages.tensorflow
        working-directory: "./nixpkgs-upkeep"
  tensorflow-bin:
    runs-on: ubuntu-latest
    steps:
      - name: Maximize disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo docker image prune --all --force
      - run: lscpu
      - uses: "cachix/install-nix-action@v22"
        with:
          extra_nix_config: experimental-features = nix-command flakes
          nix_path: nixpkgs=channel:nixos-unstable
      - name: nix-info
        run: "nix-shell -p nix-info --run 'nix-info -m'"
      - uses: "cachix/cachix-action@v12"
        with:
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          name: ploop
      - name: Checkout nixpkgs-upkeep
        uses: "actions/checkout@v3"
        with:
          path: nixpkgs-upkeep
      - name: Checkout nixpkgs
        uses: "actions/checkout@v3"
        with:
          path: nixpkgs
          repository: NixOS/nixpkgs
          token: "${{ secrets.GH_TOKEN }}"
      - name: Add CUDA/MKL overlay
        run: |
          mkdir -p ~/.config/nixpkgs/overlays/
          cp ./nixpkgs-upkeep/overlay.nix ~/.config/nixpkgs/overlays/
      - name: "Set ~/.config/nixpkgs/config.nix"
        run: |
          mkdir -p ~/.config/nixpkgs/
          echo '{ allowUnfree = true; cudaSupport = true; cudaCapabilities = ["8.0"]; }' > ~/.config/nixpkgs/config.nix
      - name: Check current package version
        run: |
          PRE_VERSION="$(nix eval --raw --file . python3Packages.tensorflow-bin.version)"
          echo "Current version: $PRE_VERSION"
          echo "PRE_VERSION=$PRE_VERSION" >> $GITHUB_ENV
        working-directory: "./nixpkgs"
      - env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        name: build canary
        run: |
          GH_TOKEN=$GH_TOKEN ./canary.py --nixpkgs ../nixpkgs --attr python3Packages.tensorflow-bin
        working-directory: "./nixpkgs-upkeep"
  tensorflow-datasets:
    runs-on: ubuntu-latest
    steps:
      - name: Maximize disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo docker image prune --all --force
      - run: lscpu
      - uses: "cachix/install-nix-action@v22"
        with:
          extra_nix_config: experimental-features = nix-command flakes
          nix_path: nixpkgs=channel:nixos-unstable
      - name: nix-info
        run: "nix-shell -p nix-info --run 'nix-info -m'"
      - uses: "cachix/cachix-action@v12"
        with:
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          name: ploop
      - name: Checkout nixpkgs-upkeep
        uses: "actions/checkout@v3"
        with:
          path: nixpkgs-upkeep
      - name: Checkout nixpkgs
        uses: "actions/checkout@v3"
        with:
          path: nixpkgs
          repository: NixOS/nixpkgs
          token: "${{ secrets.GH_TOKEN }}"
      - name: Add CUDA/MKL overlay
        run: |
          mkdir -p ~/.config/nixpkgs/overlays/
          cp ./nixpkgs-upkeep/overlay.nix ~/.config/nixpkgs/overlays/
      - name: "Set ~/.config/nixpkgs/config.nix"
        run: |
          mkdir -p ~/.config/nixpkgs/
          echo '{ allowUnfree = true; cudaSupport = true; cudaCapabilities = ["8.0"]; }' > ~/.config/nixpkgs/config.nix
      - name: Check current package version
        run: |
          PRE_VERSION="$(nix eval --raw --file . python3Packages.tensorflow-datasets.version)"
          echo "Current version: $PRE_VERSION"
          echo "PRE_VERSION=$PRE_VERSION" >> $GITHUB_ENV
        working-directory: "./nixpkgs"
      - env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        name: build canary
        run: |
          GH_TOKEN=$GH_TOKEN ./canary.py --nixpkgs ../nixpkgs --attr python3Packages.tensorflow-datasets
        working-directory: "./nixpkgs-upkeep"
  torch:
    runs-on: ubuntu-latest
    steps:
      - name: Maximize disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo docker image prune --all --force
      - run: lscpu
      - uses: "cachix/install-nix-action@v22"
        with:
          extra_nix_config: experimental-features = nix-command flakes
          nix_path: nixpkgs=channel:nixos-unstable
      - name: nix-info
        run: "nix-shell -p nix-info --run 'nix-info -m'"
      - uses: "cachix/cachix-action@v12"
        with:
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          name: ploop
      - name: Checkout nixpkgs-upkeep
        uses: "actions/checkout@v3"
        with:
          path: nixpkgs-upkeep
      - name: Checkout nixpkgs
        uses: "actions/checkout@v3"
        with:
          path: nixpkgs
          repository: NixOS/nixpkgs
          token: "${{ secrets.GH_TOKEN }}"
      - name: Add CUDA/MKL overlay
        run: |
          mkdir -p ~/.config/nixpkgs/overlays/
          cp ./nixpkgs-upkeep/overlay.nix ~/.config/nixpkgs/overlays/
      - name: "Set ~/.config/nixpkgs/config.nix"
        run: |
          mkdir -p ~/.config/nixpkgs/
          echo '{ allowUnfree = true; cudaSupport = true; cudaCapabilities = ["8.0"]; }' > ~/.config/nixpkgs/config.nix
      - name: Check current package version
        run: |
          PRE_VERSION="$(nix eval --raw --file . python3Packages.torch.version)"
          echo "Current version: $PRE_VERSION"
          echo "PRE_VERSION=$PRE_VERSION" >> $GITHUB_ENV
        working-directory: "./nixpkgs"
      - env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        name: build canary
        run: |
          GH_TOKEN=$GH_TOKEN ./canary.py --nixpkgs ../nixpkgs --attr python3Packages.torch
        working-directory: "./nixpkgs-upkeep"
  torch-bin:
    runs-on: ubuntu-latest
    steps:
      - name: Maximize disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo docker image prune --all --force
      - run: lscpu
      - uses: "cachix/install-nix-action@v22"
        with:
          extra_nix_config: experimental-features = nix-command flakes
          nix_path: nixpkgs=channel:nixos-unstable
      - name: nix-info
        run: "nix-shell -p nix-info --run 'nix-info -m'"
      - uses: "cachix/cachix-action@v12"
        with:
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          name: ploop
      - name: Checkout nixpkgs-upkeep
        uses: "actions/checkout@v3"
        with:
          path: nixpkgs-upkeep
      - name: Checkout nixpkgs
        uses: "actions/checkout@v3"
        with:
          path: nixpkgs
          repository: NixOS/nixpkgs
          token: "${{ secrets.GH_TOKEN }}"
      - name: Add CUDA/MKL overlay
        run: |
          mkdir -p ~/.config/nixpkgs/overlays/
          cp ./nixpkgs-upkeep/overlay.nix ~/.config/nixpkgs/overlays/
      - name: "Set ~/.config/nixpkgs/config.nix"
        run: |
          mkdir -p ~/.config/nixpkgs/
          echo '{ allowUnfree = true; cudaSupport = true; cudaCapabilities = ["8.0"]; }' > ~/.config/nixpkgs/config.nix
      - name: Check current package version
        run: |
          PRE_VERSION="$(nix eval --raw --file . python3Packages.torch-bin.version)"
          echo "Current version: $PRE_VERSION"
          echo "PRE_VERSION=$PRE_VERSION" >> $GITHUB_ENV
        working-directory: "./nixpkgs"
      - env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        name: build canary
        run: |
          GH_TOKEN=$GH_TOKEN ./canary.py --nixpkgs ../nixpkgs --attr python3Packages.torch-bin
        working-directory: "./nixpkgs-upkeep"
  torchvision:
    runs-on: ubuntu-latest
    steps:
      - name: Maximize disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo docker image prune --all --force
      - run: lscpu
      - uses: "cachix/install-nix-action@v22"
        with:
          extra_nix_config: experimental-features = nix-command flakes
          nix_path: nixpkgs=channel:nixos-unstable
      - name: nix-info
        run: "nix-shell -p nix-info --run 'nix-info -m'"
      - uses: "cachix/cachix-action@v12"
        with:
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          name: ploop
      - name: Checkout nixpkgs-upkeep
        uses: "actions/checkout@v3"
        with:
          path: nixpkgs-upkeep
      - name: Checkout nixpkgs
        uses: "actions/checkout@v3"
        with:
          path: nixpkgs
          repository: NixOS/nixpkgs
          token: "${{ secrets.GH_TOKEN }}"
      - name: Add CUDA/MKL overlay
        run: |
          mkdir -p ~/.config/nixpkgs/overlays/
          cp ./nixpkgs-upkeep/overlay.nix ~/.config/nixpkgs/overlays/
      - name: "Set ~/.config/nixpkgs/config.nix"
        run: |
          mkdir -p ~/.config/nixpkgs/
          echo '{ allowUnfree = true; cudaSupport = true; cudaCapabilities = ["8.0"]; }' > ~/.config/nixpkgs/config.nix
      - name: Check current package version
        run: |
          PRE_VERSION="$(nix eval --raw --file . python3Packages.torchvision.version)"
          echo "Current version: $PRE_VERSION"
          echo "PRE_VERSION=$PRE_VERSION" >> $GITHUB_ENV
        working-directory: "./nixpkgs"
      - env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        name: build canary
        run: |
          GH_TOKEN=$GH_TOKEN ./canary.py --nixpkgs ../nixpkgs --attr python3Packages.torchvision
        working-directory: "./nixpkgs-upkeep"
  tqdm:
    runs-on: ubuntu-latest
    steps:
      - name: Maximize disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo docker image prune --all --force
      - run: lscpu
      - uses: "cachix/install-nix-action@v22"
        with:
          extra_nix_config: experimental-features = nix-command flakes
          nix_path: nixpkgs=channel:nixos-unstable
      - name: nix-info
        run: "nix-shell -p nix-info --run 'nix-info -m'"
      - uses: "cachix/cachix-action@v12"
        with:
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          name: ploop
      - name: Checkout nixpkgs-upkeep
        uses: "actions/checkout@v3"
        with:
          path: nixpkgs-upkeep
      - name: Checkout nixpkgs
        uses: "actions/checkout@v3"
        with:
          path: nixpkgs
          repository: NixOS/nixpkgs
          token: "${{ secrets.GH_TOKEN }}"
      - name: Add CUDA/MKL overlay
        run: |
          mkdir -p ~/.config/nixpkgs/overlays/
          cp ./nixpkgs-upkeep/overlay.nix ~/.config/nixpkgs/overlays/
      - name: "Set ~/.config/nixpkgs/config.nix"
        run: |
          mkdir -p ~/.config/nixpkgs/
          echo '{ allowUnfree = true; cudaSupport = true; cudaCapabilities = ["8.0"]; }' > ~/.config/nixpkgs/config.nix
      - name: Check current package version
        run: |
          PRE_VERSION="$(nix eval --raw --file . python3Packages.tqdm.version)"
          echo "Current version: $PRE_VERSION"
          echo "PRE_VERSION=$PRE_VERSION" >> $GITHUB_ENV
        working-directory: "./nixpkgs"
      - env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        name: build canary
        run: |
          GH_TOKEN=$GH_TOKEN ./canary.py --nixpkgs ../nixpkgs --attr python3Packages.tqdm
        working-directory: "./nixpkgs-upkeep"
  vscode:
    runs-on: ubuntu-latest
    steps:
      - name: Maximize disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo docker image prune --all --force
      - run: lscpu
      - uses: "cachix/install-nix-action@v22"
        with:
          extra_nix_config: experimental-features = nix-command flakes
          nix_path: nixpkgs=channel:nixos-unstable
      - name: nix-info
        run: "nix-shell -p nix-info --run 'nix-info -m'"
      - uses: "cachix/cachix-action@v12"
        with:
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          name: ploop
      - name: Checkout nixpkgs-upkeep
        uses: "actions/checkout@v3"
        with:
          path: nixpkgs-upkeep
      - name: Checkout nixpkgs
        uses: "actions/checkout@v3"
        with:
          path: nixpkgs
          repository: NixOS/nixpkgs
          token: "${{ secrets.GH_TOKEN }}"
      - name: Add CUDA/MKL overlay
        run: |
          mkdir -p ~/.config/nixpkgs/overlays/
          cp ./nixpkgs-upkeep/overlay.nix ~/.config/nixpkgs/overlays/
      - name: "Set ~/.config/nixpkgs/config.nix"
        run: |
          mkdir -p ~/.config/nixpkgs/
          echo '{ allowUnfree = true; cudaSupport = true; cudaCapabilities = ["8.0"]; }' > ~/.config/nixpkgs/config.nix
      - name: Check current package version
        run: |
          PRE_VERSION="$(nix eval --raw --file . vscode.version)"
          echo "Current version: $PRE_VERSION"
          echo "PRE_VERSION=$PRE_VERSION" >> $GITHUB_ENV
        working-directory: "./nixpkgs"
      - run: "./nixpkgs/pkgs/applications/editors/vscode/update-vscode.sh"
      - run: git diff
        working-directory: "./nixpkgs"
      - env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        name: Create PR
        run: |
          GH_TOKEN="$GH_TOKEN" \
            PACKAGE="vscode" \
            PRE_VERSION="$PRE_VERSION" \
            GITHUB_WORKFLOW_URL="https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" \
            ./../nixpkgs-upkeep/create-pr.sh
        working-directory: "./nixpkgs"
  vscodium:
    runs-on: ubuntu-latest
    steps:
      - name: Maximize disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo docker image prune --all --force
      - run: lscpu
      - uses: "cachix/install-nix-action@v22"
        with:
          extra_nix_config: experimental-features = nix-command flakes
          nix_path: nixpkgs=channel:nixos-unstable
      - name: nix-info
        run: "nix-shell -p nix-info --run 'nix-info -m'"
      - uses: "cachix/cachix-action@v12"
        with:
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          name: ploop
      - name: Checkout nixpkgs-upkeep
        uses: "actions/checkout@v3"
        with:
          path: nixpkgs-upkeep
      - name: Checkout nixpkgs
        uses: "actions/checkout@v3"
        with:
          path: nixpkgs
          repository: NixOS/nixpkgs
          token: "${{ secrets.GH_TOKEN }}"
      - name: Add CUDA/MKL overlay
        run: |
          mkdir -p ~/.config/nixpkgs/overlays/
          cp ./nixpkgs-upkeep/overlay.nix ~/.config/nixpkgs/overlays/
      - name: "Set ~/.config/nixpkgs/config.nix"
        run: |
          mkdir -p ~/.config/nixpkgs/
          echo '{ allowUnfree = true; cudaSupport = true; cudaCapabilities = ["8.0"]; }' > ~/.config/nixpkgs/config.nix
      - name: Check current package version
        run: |
          PRE_VERSION="$(nix eval --raw --file . vscodium.version)"
          echo "Current version: $PRE_VERSION"
          echo "PRE_VERSION=$PRE_VERSION" >> $GITHUB_ENV
        working-directory: "./nixpkgs"
      - run: "./nixpkgs/pkgs/applications/editors/vscode/update-vscodium.sh"
      - run: git diff
        working-directory: "./nixpkgs"
      - env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        name: Create PR
        run: |
          GH_TOKEN="$GH_TOKEN" \
            PACKAGE="vscodium" \
            PRE_VERSION="$PRE_VERSION" \
            GITHUB_WORKFLOW_URL="https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" \
            ./../nixpkgs-upkeep/create-pr.sh
        working-directory: "./nixpkgs"
  wandb:
    runs-on: ubuntu-latest
    steps:
      - name: Maximize disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo docker image prune --all --force
      - run: lscpu
      - uses: "cachix/install-nix-action@v22"
        with:
          extra_nix_config: experimental-features = nix-command flakes
          nix_path: nixpkgs=channel:nixos-unstable
      - name: nix-info
        run: "nix-shell -p nix-info --run 'nix-info -m'"
      - uses: "cachix/cachix-action@v12"
        with:
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          name: ploop
      - name: Checkout nixpkgs-upkeep
        uses: "actions/checkout@v3"
        with:
          path: nixpkgs-upkeep
      - name: Checkout nixpkgs
        uses: "actions/checkout@v3"
        with:
          path: nixpkgs
          repository: NixOS/nixpkgs
          token: "${{ secrets.GH_TOKEN }}"
      - name: Add CUDA/MKL overlay
        run: |
          mkdir -p ~/.config/nixpkgs/overlays/
          cp ./nixpkgs-upkeep/overlay.nix ~/.config/nixpkgs/overlays/
      - name: "Set ~/.config/nixpkgs/config.nix"
        run: |
          mkdir -p ~/.config/nixpkgs/
          echo '{ allowUnfree = true; cudaSupport = true; cudaCapabilities = ["8.0"]; }' > ~/.config/nixpkgs/config.nix
      - name: Check current package version
        run: |
          PRE_VERSION="$(nix eval --raw --file . python3Packages.wandb.version)"
          echo "Current version: $PRE_VERSION"
          echo "PRE_VERSION=$PRE_VERSION" >> $GITHUB_ENV
        working-directory: "./nixpkgs"
      - env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        name: build canary
        run: |
          GH_TOKEN=$GH_TOKEN ./canary.py --nixpkgs ../nixpkgs --attr python3Packages.wandb
        working-directory: "./nixpkgs-upkeep"
      - name: Run custom update-script
        run: |
          cp ./nixpkgs-upkeep/update-wandb.py ./nixpkgs/pkgs/development/python-modules/wandb
          chmod +x ./nixpkgs/pkgs/development/python-modules/wandb/update-wandb.py
          ./nixpkgs/pkgs/development/python-modules/wandb/update-wandb.py
          rm ./nixpkgs/pkgs/development/python-modules/wandb/update-wandb.py
      - run: git diff
        working-directory: "./nixpkgs"
      - env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        name: Create PR
        run: |
          GH_TOKEN="$GH_TOKEN" \
            PACKAGE="python3Packages.wandb" \
            PRE_VERSION="$PRE_VERSION" \
            GITHUB_WORKFLOW_URL="https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" \
            ./../nixpkgs-upkeep/create-pr.sh
        working-directory: "./nixpkgs"
  yapf:
    runs-on: ubuntu-latest
    steps:
      - name: Maximize disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo docker image prune --all --force
      - run: lscpu
      - uses: "cachix/install-nix-action@v22"
        with:
          extra_nix_config: experimental-features = nix-command flakes
          nix_path: nixpkgs=channel:nixos-unstable
      - name: nix-info
        run: "nix-shell -p nix-info --run 'nix-info -m'"
      - uses: "cachix/cachix-action@v12"
        with:
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          name: ploop
      - name: Checkout nixpkgs-upkeep
        uses: "actions/checkout@v3"
        with:
          path: nixpkgs-upkeep
      - name: Checkout nixpkgs
        uses: "actions/checkout@v3"
        with:
          path: nixpkgs
          repository: NixOS/nixpkgs
          token: "${{ secrets.GH_TOKEN }}"
      - name: Add CUDA/MKL overlay
        run: |
          mkdir -p ~/.config/nixpkgs/overlays/
          cp ./nixpkgs-upkeep/overlay.nix ~/.config/nixpkgs/overlays/
      - name: "Set ~/.config/nixpkgs/config.nix"
        run: |
          mkdir -p ~/.config/nixpkgs/
          echo '{ allowUnfree = true; cudaSupport = true; cudaCapabilities = ["8.0"]; }' > ~/.config/nixpkgs/config.nix
      - name: Check current package version
        run: |
          PRE_VERSION="$(nix eval --raw --file . yapf.version)"
          echo "Current version: $PRE_VERSION"
          echo "PRE_VERSION=$PRE_VERSION" >> $GITHUB_ENV
        working-directory: "./nixpkgs"
      - env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        name: build canary
        run: |
          GH_TOKEN=$GH_TOKEN ./canary.py --nixpkgs ../nixpkgs --attr yapf
        working-directory: "./nixpkgs-upkeep"
name: upkeep
on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 0 * * *"
