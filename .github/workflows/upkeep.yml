# Code generated by dhall-to-yaml.  DO NOT EDIT.
jobs:
  dm-haiku:
    runs-on: ubuntu-latest
    steps:
      - uses: "cachix/install-nix-action@v16"
        with:
          extra_nix_config: experimental-features = nix-command flakes
          nix_path: nixpkgs=channel:nixos-unstable
      - name: Checkout nixpkgs-upkeep
        uses: "actions/checkout@v2"
        with:
          path: nixpkgs-upkeep
      - name: Checkout nixpkgs
        uses: "actions/checkout@v2"
        with:
          path: nixpkgs
          repository: NixOS/nixpkgs
          token: "${{ secrets.GH_TOKEN }}"
      - name: Check current package version
        run: |
          PACKAGE="python3Packages.dm-haiku"
          PRE_VERSION="$(nix eval --raw -f . $PACKAGE.version)"
          echo "PACKAGE=$PACKAGE" >> $GITHUB_ENV
          echo "PRE_VERSION=$PRE_VERSION" >> $GITHUB_ENV
        working-directory: "./nixpkgs"
      - env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        name: build canary
        run: |
          GH_TOKEN=$GH_TOKEN ./canary.py --nixpkgs ../nixpkgs --attr $PACKAGE
        working-directory: "./nixpkgs-upkeep"
  elegy:
    runs-on: ubuntu-latest
    steps:
      - uses: "cachix/install-nix-action@v16"
        with:
          extra_nix_config: experimental-features = nix-command flakes
          nix_path: nixpkgs=channel:nixos-unstable
      - name: Checkout nixpkgs-upkeep
        uses: "actions/checkout@v2"
        with:
          path: nixpkgs-upkeep
      - name: Checkout nixpkgs
        uses: "actions/checkout@v2"
        with:
          path: nixpkgs
          repository: NixOS/nixpkgs
          token: "${{ secrets.GH_TOKEN }}"
      - name: Check current package version
        run: |
          PACKAGE="python3Packages.elegy"
          PRE_VERSION="$(nix eval --raw -f . $PACKAGE.version)"
          echo "PACKAGE=$PACKAGE" >> $GITHUB_ENV
          echo "PRE_VERSION=$PRE_VERSION" >> $GITHUB_ENV
        working-directory: "./nixpkgs"
      - env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        name: build canary
        run: |
          GH_TOKEN=$GH_TOKEN ./canary.py --nixpkgs ../nixpkgs --attr $PACKAGE
        working-directory: "./nixpkgs-upkeep"
  flax:
    runs-on: ubuntu-latest
    steps:
      - uses: "cachix/install-nix-action@v16"
        with:
          extra_nix_config: experimental-features = nix-command flakes
          nix_path: nixpkgs=channel:nixos-unstable
      - name: Checkout nixpkgs-upkeep
        uses: "actions/checkout@v2"
        with:
          path: nixpkgs-upkeep
      - name: Checkout nixpkgs
        uses: "actions/checkout@v2"
        with:
          path: nixpkgs
          repository: NixOS/nixpkgs
          token: "${{ secrets.GH_TOKEN }}"
      - name: Check current package version
        run: |
          PACKAGE="python3Packages.flax"
          PRE_VERSION="$(nix eval --raw -f . $PACKAGE.version)"
          echo "PACKAGE=$PACKAGE" >> $GITHUB_ENV
          echo "PRE_VERSION=$PRE_VERSION" >> $GITHUB_ENV
        working-directory: "./nixpkgs"
      - env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        name: build canary
        run: |
          GH_TOKEN=$GH_TOKEN ./canary.py --nixpkgs ../nixpkgs --attr $PACKAGE
        working-directory: "./nixpkgs-upkeep"
  ipython:
    runs-on: ubuntu-latest
    steps:
      - uses: "cachix/install-nix-action@v16"
        with:
          extra_nix_config: experimental-features = nix-command flakes
          nix_path: nixpkgs=channel:nixos-unstable
      - name: Checkout nixpkgs-upkeep
        uses: "actions/checkout@v2"
        with:
          path: nixpkgs-upkeep
      - name: Checkout nixpkgs
        uses: "actions/checkout@v2"
        with:
          path: nixpkgs
          repository: NixOS/nixpkgs
          token: "${{ secrets.GH_TOKEN }}"
      - name: Check current package version
        run: |
          PACKAGE="python3Packages.ipython"
          PRE_VERSION="$(nix eval --raw -f . $PACKAGE.version)"
          echo "PACKAGE=$PACKAGE" >> $GITHUB_ENV
          echo "PRE_VERSION=$PRE_VERSION" >> $GITHUB_ENV
        working-directory: "./nixpkgs"
      - env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        name: build canary
        run: |
          GH_TOKEN=$GH_TOKEN ./canary.py --nixpkgs ../nixpkgs --attr $PACKAGE
        working-directory: "./nixpkgs-upkeep"
  jax:
    runs-on: ubuntu-latest
    steps:
      - uses: "cachix/install-nix-action@v16"
        with:
          extra_nix_config: experimental-features = nix-command flakes
          nix_path: nixpkgs=channel:nixos-unstable
      - name: Checkout nixpkgs-upkeep
        uses: "actions/checkout@v2"
        with:
          path: nixpkgs-upkeep
      - name: Checkout nixpkgs
        uses: "actions/checkout@v2"
        with:
          path: nixpkgs
          repository: NixOS/nixpkgs
          token: "${{ secrets.GH_TOKEN }}"
      - name: Check current package version
        run: |
          PACKAGE="python3Packages.jax"
          PRE_VERSION="$(nix eval --raw -f . $PACKAGE.version)"
          echo "PACKAGE=$PACKAGE" >> $GITHUB_ENV
          echo "PRE_VERSION=$PRE_VERSION" >> $GITHUB_ENV
        working-directory: "./nixpkgs"
      - env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        name: build canary
        run: |
          GH_TOKEN=$GH_TOKEN ./canary.py --nixpkgs ../nixpkgs --attr $PACKAGE
        working-directory: "./nixpkgs-upkeep"
      - name: Run custom update-script
        run: |
          cp nixpkgs-upkeep/update-jax.py nixpkgs/pkgs/development/python-modules/jax/update-jax.py
          ./nixpkgs/pkgs/development/python-modules/jax/update-jax.py
          rm nixpkgs/pkgs/development/python-modules/jax/update-jax.py
      - run: git diff
        working-directory: "./nixpkgs"
      - run: nix-build -A python3Packages.jax
        working-directory: "./nixpkgs"
      - env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        name: Create PR
        run: |
          GH_TOKEN=$GH_TOKEN \
            TARGET_BRANCH="master" \
            PACKAGE=$PACKAGE \
            PRE_VERSION=$PRE_VERSION \
            TESTED_OTHER_LINUX="true" \
            GITHUB_WORKFLOW_URL="https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" \
            ./../nixpkgs-upkeep/create-pr.sh
        working-directory: "./nixpkgs"
  jaxlib:
    runs-on: ubuntu-latest
    steps:
      - uses: "cachix/install-nix-action@v16"
        with:
          extra_nix_config: experimental-features = nix-command flakes
          nix_path: nixpkgs=channel:nixos-unstable
      - name: Checkout nixpkgs-upkeep
        uses: "actions/checkout@v2"
        with:
          path: nixpkgs-upkeep
      - name: Checkout nixpkgs
        uses: "actions/checkout@v2"
        with:
          path: nixpkgs
          repository: NixOS/nixpkgs
          token: "${{ secrets.GH_TOKEN }}"
      - name: Check current package version
        run: |
          PACKAGE="python3Packages.jaxlib"
          PRE_VERSION="$(nix eval --raw -f . $PACKAGE.version)"
          echo "PACKAGE=$PACKAGE" >> $GITHUB_ENV
          echo "PRE_VERSION=$PRE_VERSION" >> $GITHUB_ENV
        working-directory: "./nixpkgs"
      - env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        name: build canary
        run: |
          GH_TOKEN=$GH_TOKEN ./canary.py --nixpkgs ../nixpkgs --attr $PACKAGE
        working-directory: "./nixpkgs-upkeep"
  jaxlibWithCuda:
    runs-on: ubuntu-latest
    steps:
      - uses: "cachix/install-nix-action@v16"
        with:
          extra_nix_config: experimental-features = nix-command flakes
          nix_path: nixpkgs=channel:nixos-unstable
      - name: Checkout nixpkgs-upkeep
        uses: "actions/checkout@v2"
        with:
          path: nixpkgs-upkeep
      - name: Checkout nixpkgs
        uses: "actions/checkout@v2"
        with:
          path: nixpkgs
          repository: NixOS/nixpkgs
          token: "${{ secrets.GH_TOKEN }}"
      - run: |
          mkdir -p ~/.config/nixpkgs/
          echo "{ allowUnfree = true; }" > ~/.config/nixpkgs/config.nix
      - name: Check current package version
        run: |
          PACKAGE="python3Packages.jaxlibWithCuda"
          PRE_VERSION="$(nix eval --raw -f . $PACKAGE.version)"
          echo "PACKAGE=$PACKAGE" >> $GITHUB_ENV
          echo "PRE_VERSION=$PRE_VERSION" >> $GITHUB_ENV
        working-directory: "./nixpkgs"
      - env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        name: build canary
        run: |
          GH_TOKEN=$GH_TOKEN ./canary.py --nixpkgs ../nixpkgs --attr $PACKAGE
        working-directory: "./nixpkgs-upkeep"
  jmp:
    runs-on: ubuntu-latest
    steps:
      - uses: "cachix/install-nix-action@v16"
        with:
          extra_nix_config: experimental-features = nix-command flakes
          nix_path: nixpkgs=channel:nixos-unstable
      - name: Checkout nixpkgs-upkeep
        uses: "actions/checkout@v2"
        with:
          path: nixpkgs-upkeep
      - name: Checkout nixpkgs
        uses: "actions/checkout@v2"
        with:
          path: nixpkgs
          repository: NixOS/nixpkgs
          token: "${{ secrets.GH_TOKEN }}"
      - name: Check current package version
        run: |
          PACKAGE="python3Packages.jmp"
          PRE_VERSION="$(nix eval --raw -f . $PACKAGE.version)"
          echo "PACKAGE=$PACKAGE" >> $GITHUB_ENV
          echo "PRE_VERSION=$PRE_VERSION" >> $GITHUB_ENV
        working-directory: "./nixpkgs"
      - env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        name: build canary
        run: |
          GH_TOKEN=$GH_TOKEN ./canary.py --nixpkgs ../nixpkgs --attr $PACKAGE
        working-directory: "./nixpkgs-upkeep"
  julia_17-bin:
    runs-on: ubuntu-latest
    steps:
      - uses: "cachix/install-nix-action@v16"
        with:
          extra_nix_config: experimental-features = nix-command flakes
          nix_path: nixpkgs=channel:nixos-unstable
      - name: Checkout nixpkgs-upkeep
        uses: "actions/checkout@v2"
        with:
          path: nixpkgs-upkeep
      - name: Checkout nixpkgs
        uses: "actions/checkout@v2"
        with:
          path: nixpkgs
          repository: NixOS/nixpkgs
          token: "${{ secrets.GH_TOKEN }}"
      - name: Check current package version
        run: |
          PACKAGE="julia_17-bin"
          PRE_VERSION="$(nix eval --raw -f . $PACKAGE.version)"
          echo "PACKAGE=$PACKAGE" >> $GITHUB_ENV
          echo "PRE_VERSION=$PRE_VERSION" >> $GITHUB_ENV
        working-directory: "./nixpkgs"
      - env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        name: build canary
        run: |
          GH_TOKEN=$GH_TOKEN ./canary.py --nixpkgs ../nixpkgs --attr $PACKAGE
        working-directory: "./nixpkgs-upkeep"
      - name: Run custom update-script
        run: |
          cp nixpkgs-upkeep/update-julia-1.7.py nixpkgs/pkgs/development/compilers/julia/update-julia-1.7.py
          ./nixpkgs/pkgs/development/compilers/julia/update-julia-1.7.py
          rm nixpkgs/pkgs/development/compilers/julia/update-julia-1.7.py
      - run: git diff
        working-directory: "./nixpkgs"
      - run: nix-build -A julia_17-bin
        working-directory: "./nixpkgs"
      - env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        name: Create PR
        run: |
          GH_TOKEN=$GH_TOKEN \
            TARGET_BRANCH="master" \
            PACKAGE=$PACKAGE \
            PRE_VERSION=$PRE_VERSION \
            TESTED_OTHER_LINUX="true" \
            GITHUB_WORKFLOW_URL="https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" \
            ./../nixpkgs-upkeep/create-pr.sh
        working-directory: "./nixpkgs"
  matplotlib:
    runs-on: ubuntu-latest
    steps:
      - uses: "cachix/install-nix-action@v16"
        with:
          extra_nix_config: experimental-features = nix-command flakes
          nix_path: nixpkgs=channel:nixos-unstable
      - name: Checkout nixpkgs-upkeep
        uses: "actions/checkout@v2"
        with:
          path: nixpkgs-upkeep
      - name: Checkout nixpkgs
        uses: "actions/checkout@v2"
        with:
          path: nixpkgs
          repository: NixOS/nixpkgs
          token: "${{ secrets.GH_TOKEN }}"
      - name: Check current package version
        run: |
          PACKAGE="python3Packages.matplotlib"
          PRE_VERSION="$(nix eval --raw -f . $PACKAGE.version)"
          echo "PACKAGE=$PACKAGE" >> $GITHUB_ENV
          echo "PRE_VERSION=$PRE_VERSION" >> $GITHUB_ENV
        working-directory: "./nixpkgs"
      - env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        name: build canary
        run: |
          GH_TOKEN=$GH_TOKEN ./canary.py --nixpkgs ../nixpkgs --attr $PACKAGE
        working-directory: "./nixpkgs-upkeep"
      - name: Run custom update-script
        run: |
          cp ./nixpkgs-upkeep/update-matplotlib.py ./nixpkgs/pkgs/development/python-modules/matplotlib
          chmod +x ./nixpkgs/pkgs/development/python-modules/matplotlib/update-matplotlib.py
          ./nixpkgs/pkgs/development/python-modules/matplotlib/update-matplotlib.py
          rm ./nixpkgs/pkgs/development/python-modules/matplotlib/update-matplotlib.py
      - run: git diff
        working-directory: "./nixpkgs"
      - run: nix-build -A python3Packages.matplotlib
        working-directory: "./nixpkgs"
      - env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        name: Create PR
        run: |
          PACKAGE="python3Packages.matplotlib" \
            TARGET_BRANCH="staging" \
            TESTED_OTHER_LINUX="true" \
            PRE_VERSION=$PRE_VERSION \
            GH_TOKEN=$GH_TOKEN \
            GITHUB_WORKFLOW_URL="https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" \
            ./../nixpkgs-upkeep/create-pr.sh
        working-directory: "./nixpkgs"
  optax:
    runs-on: ubuntu-latest
    steps:
      - uses: "cachix/install-nix-action@v16"
        with:
          extra_nix_config: experimental-features = nix-command flakes
          nix_path: nixpkgs=channel:nixos-unstable
      - name: Checkout nixpkgs-upkeep
        uses: "actions/checkout@v2"
        with:
          path: nixpkgs-upkeep
      - name: Checkout nixpkgs
        uses: "actions/checkout@v2"
        with:
          path: nixpkgs
          repository: NixOS/nixpkgs
          token: "${{ secrets.GH_TOKEN }}"
      - name: Check current package version
        run: |
          PACKAGE="python3Packages.optax"
          PRE_VERSION="$(nix eval --raw -f . $PACKAGE.version)"
          echo "PACKAGE=$PACKAGE" >> $GITHUB_ENV
          echo "PRE_VERSION=$PRE_VERSION" >> $GITHUB_ENV
        working-directory: "./nixpkgs"
      - env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        name: build canary
        run: |
          GH_TOKEN=$GH_TOKEN ./canary.py --nixpkgs ../nixpkgs --attr $PACKAGE
        working-directory: "./nixpkgs-upkeep"
  plexamp:
    runs-on: ubuntu-latest
    steps:
      - uses: "cachix/install-nix-action@v16"
        with:
          extra_nix_config: experimental-features = nix-command flakes
          nix_path: nixpkgs=channel:nixos-unstable
      - name: Checkout nixpkgs-upkeep
        uses: "actions/checkout@v2"
        with:
          path: nixpkgs-upkeep
      - name: Checkout nixpkgs
        uses: "actions/checkout@v2"
        with:
          path: nixpkgs
          repository: NixOS/nixpkgs
          token: "${{ secrets.GH_TOKEN }}"
      - run: |
          mkdir -p ~/.config/nixpkgs/
          echo "{ allowUnfree = true; }" > ~/.config/nixpkgs/config.nix
      - name: Check current package version before update script
        run: |
          PRE_VERSION="$(nix-instantiate --eval -E "with import ./. {}; lib.getVersion plexamp" --json | jq -r)"
          echo "PRE_VERSION=$PRE_VERSION" >> $GITHUB_ENV
        working-directory: "./nixpkgs"
      - name: Run custom update-script
        run: |
          ./nixpkgs/pkgs/applications/audio/plexamp/update-plexamp.sh
      - run: git diff
        working-directory: "./nixpkgs"
      - run: nix-build -A plexamp
        working-directory: "./nixpkgs"
      - env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        name: Create PR
        run: |
          PACKAGE="plexamp" \
            TARGET_BRANCH="master" \
            TESTED_OTHER_LINUX="true" \
            PRE_VERSION=$PRE_VERSION \
            GH_TOKEN=$GH_TOKEN \
            GITHUB_WORKFLOW_URL="https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" \
            ./../nixpkgs-upkeep/create-pr.sh
        working-directory: "./nixpkgs"
  plotly:
    runs-on: ubuntu-latest
    steps:
      - uses: "cachix/install-nix-action@v16"
        with:
          extra_nix_config: experimental-features = nix-command flakes
          nix_path: nixpkgs=channel:nixos-unstable
      - name: Checkout nixpkgs-upkeep
        uses: "actions/checkout@v2"
        with:
          path: nixpkgs-upkeep
      - name: Checkout nixpkgs
        uses: "actions/checkout@v2"
        with:
          path: nixpkgs
          repository: NixOS/nixpkgs
          token: "${{ secrets.GH_TOKEN }}"
      - name: Check current package version
        run: |
          PACKAGE="python3Packages.plotly"
          PRE_VERSION="$(nix eval --raw -f . $PACKAGE.version)"
          echo "PACKAGE=$PACKAGE" >> $GITHUB_ENV
          echo "PRE_VERSION=$PRE_VERSION" >> $GITHUB_ENV
        working-directory: "./nixpkgs"
      - env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        name: build canary
        run: |
          GH_TOKEN=$GH_TOKEN ./canary.py --nixpkgs ../nixpkgs --attr $PACKAGE
        working-directory: "./nixpkgs-upkeep"
  spotify:
    runs-on: ubuntu-latest
    steps:
      - uses: "cachix/install-nix-action@v16"
        with:
          extra_nix_config: experimental-features = nix-command flakes
          nix_path: nixpkgs=channel:nixos-unstable
      - name: Checkout nixpkgs-upkeep
        uses: "actions/checkout@v2"
        with:
          path: nixpkgs-upkeep
      - name: Checkout nixpkgs
        uses: "actions/checkout@v2"
        with:
          path: nixpkgs
          repository: NixOS/nixpkgs
          token: "${{ secrets.GH_TOKEN }}"
      - run: |
          mkdir -p ~/.config/nixpkgs/
          echo "{ allowUnfree = true; }" > ~/.config/nixpkgs/config.nix
      - name: Check current package version before update script
        run: |
          PRE_VERSION="$(nix eval --raw -f . spotify-unwrapped.version)"
          echo "PRE_VERSION=$PRE_VERSION" >> $GITHUB_ENV
        working-directory: "./nixpkgs"
      - name: Run custom update-script
        run: |
          git config --global user.email "foo@bar.com"
          git config --global user.name "upkeep-bot"
          before_commit=$(git rev-parse HEAD)
          ./pkgs/applications/audio/spotify/update.sh
          after_commit=$(git rev-parse HEAD)
          if [ $before_commit != $after_commit ]; then
            git reset "HEAD^"
          fi
        working-directory: "./nixpkgs"
      - run: git diff
        working-directory: "./nixpkgs"
      - run: nix-build -A spotify
        working-directory: "./nixpkgs"
      - env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        name: Create PR
        run: |
          PACKAGE="spotify-unwrapped" \
            TARGET_BRANCH="master" \
            TESTED_OTHER_LINUX="true" \
            PRE_VERSION=$PRE_VERSION \
            GH_TOKEN=$GH_TOKEN \
            GITHUB_WORKFLOW_URL="https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" \
            ./../nixpkgs-upkeep/create-pr.sh
        working-directory: "./nixpkgs"
  tensorflow:
    runs-on: ubuntu-latest
    steps:
      - uses: "cachix/install-nix-action@v16"
        with:
          extra_nix_config: experimental-features = nix-command flakes
          nix_path: nixpkgs=channel:nixos-unstable
      - name: Checkout nixpkgs-upkeep
        uses: "actions/checkout@v2"
        with:
          path: nixpkgs-upkeep
      - name: Checkout nixpkgs
        uses: "actions/checkout@v2"
        with:
          path: nixpkgs
          repository: NixOS/nixpkgs
          token: "${{ secrets.GH_TOKEN }}"
      - name: Check current package version
        run: |
          PACKAGE="python3Packages.tensorflow"
          PRE_VERSION="$(nix eval --raw -f . $PACKAGE.version)"
          echo "PACKAGE=$PACKAGE" >> $GITHUB_ENV
          echo "PRE_VERSION=$PRE_VERSION" >> $GITHUB_ENV
        working-directory: "./nixpkgs"
      - env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        name: build canary
        run: |
          GH_TOKEN=$GH_TOKEN ./canary.py --nixpkgs ../nixpkgs --attr $PACKAGE
        working-directory: "./nixpkgs-upkeep"
  tensorflow-datasets:
    runs-on: ubuntu-latest
    steps:
      - uses: "cachix/install-nix-action@v16"
        with:
          extra_nix_config: experimental-features = nix-command flakes
          nix_path: nixpkgs=channel:nixos-unstable
      - name: Checkout nixpkgs-upkeep
        uses: "actions/checkout@v2"
        with:
          path: nixpkgs-upkeep
      - name: Checkout nixpkgs
        uses: "actions/checkout@v2"
        with:
          path: nixpkgs
          repository: NixOS/nixpkgs
          token: "${{ secrets.GH_TOKEN }}"
      - name: Check current package version
        run: |
          PACKAGE="python3Packages.tensorflow-datasets"
          PRE_VERSION="$(nix eval --raw -f . $PACKAGE.version)"
          echo "PACKAGE=$PACKAGE" >> $GITHUB_ENV
          echo "PRE_VERSION=$PRE_VERSION" >> $GITHUB_ENV
        working-directory: "./nixpkgs"
      - env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        name: build canary
        run: |
          GH_TOKEN=$GH_TOKEN ./canary.py --nixpkgs ../nixpkgs --attr $PACKAGE
        working-directory: "./nixpkgs-upkeep"
  tqdm:
    runs-on: ubuntu-latest
    steps:
      - uses: "cachix/install-nix-action@v16"
        with:
          extra_nix_config: experimental-features = nix-command flakes
          nix_path: nixpkgs=channel:nixos-unstable
      - name: Checkout nixpkgs-upkeep
        uses: "actions/checkout@v2"
        with:
          path: nixpkgs-upkeep
      - name: Checkout nixpkgs
        uses: "actions/checkout@v2"
        with:
          path: nixpkgs
          repository: NixOS/nixpkgs
          token: "${{ secrets.GH_TOKEN }}"
      - name: Check current package version
        run: |
          PACKAGE="python3Packages.tqdm"
          PRE_VERSION="$(nix eval --raw -f . $PACKAGE.version)"
          echo "PACKAGE=$PACKAGE" >> $GITHUB_ENV
          echo "PRE_VERSION=$PRE_VERSION" >> $GITHUB_ENV
        working-directory: "./nixpkgs"
      - env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        name: build canary
        run: |
          GH_TOKEN=$GH_TOKEN ./canary.py --nixpkgs ../nixpkgs --attr $PACKAGE
        working-directory: "./nixpkgs-upkeep"
  treeo:
    runs-on: ubuntu-latest
    steps:
      - uses: "cachix/install-nix-action@v16"
        with:
          extra_nix_config: experimental-features = nix-command flakes
          nix_path: nixpkgs=channel:nixos-unstable
      - name: Checkout nixpkgs-upkeep
        uses: "actions/checkout@v2"
        with:
          path: nixpkgs-upkeep
      - name: Checkout nixpkgs
        uses: "actions/checkout@v2"
        with:
          path: nixpkgs
          repository: NixOS/nixpkgs
          token: "${{ secrets.GH_TOKEN }}"
      - name: Check current package version
        run: |
          PACKAGE="python3Packages.treeo"
          PRE_VERSION="$(nix eval --raw -f . $PACKAGE.version)"
          echo "PACKAGE=$PACKAGE" >> $GITHUB_ENV
          echo "PRE_VERSION=$PRE_VERSION" >> $GITHUB_ENV
        working-directory: "./nixpkgs"
      - env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        name: build canary
        run: |
          GH_TOKEN=$GH_TOKEN ./canary.py --nixpkgs ../nixpkgs --attr $PACKAGE
        working-directory: "./nixpkgs-upkeep"
  treex:
    runs-on: ubuntu-latest
    steps:
      - uses: "cachix/install-nix-action@v16"
        with:
          extra_nix_config: experimental-features = nix-command flakes
          nix_path: nixpkgs=channel:nixos-unstable
      - name: Checkout nixpkgs-upkeep
        uses: "actions/checkout@v2"
        with:
          path: nixpkgs-upkeep
      - name: Checkout nixpkgs
        uses: "actions/checkout@v2"
        with:
          path: nixpkgs
          repository: NixOS/nixpkgs
          token: "${{ secrets.GH_TOKEN }}"
      - name: Check current package version
        run: |
          PACKAGE="python3Packages.treex"
          PRE_VERSION="$(nix eval --raw -f . $PACKAGE.version)"
          echo "PACKAGE=$PACKAGE" >> $GITHUB_ENV
          echo "PRE_VERSION=$PRE_VERSION" >> $GITHUB_ENV
        working-directory: "./nixpkgs"
      - env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        name: build canary
        run: |
          GH_TOKEN=$GH_TOKEN ./canary.py --nixpkgs ../nixpkgs --attr $PACKAGE
        working-directory: "./nixpkgs-upkeep"
  vscode:
    runs-on: ubuntu-latest
    steps:
      - uses: "cachix/install-nix-action@v16"
        with:
          extra_nix_config: experimental-features = nix-command flakes
          nix_path: nixpkgs=channel:nixos-unstable
      - name: Checkout nixpkgs-upkeep
        uses: "actions/checkout@v2"
        with:
          path: nixpkgs-upkeep
      - name: Checkout nixpkgs
        uses: "actions/checkout@v2"
        with:
          path: nixpkgs
          repository: NixOS/nixpkgs
          token: "${{ secrets.GH_TOKEN }}"
      - name: Check current package version
        run: |
          PACKAGE="vscode"
          PRE_VERSION="$(nix eval --raw -f . $PACKAGE.version)"
          echo "PACKAGE=$PACKAGE" >> $GITHUB_ENV
          echo "PRE_VERSION=$PRE_VERSION" >> $GITHUB_ENV
        working-directory: "./nixpkgs"
      - run: |
          mkdir -p ~/.config/nixpkgs/
          echo "{ allowUnfree = true; }" > ~/.config/nixpkgs/config.nix
      - name: Run custom update-script
        run: |
          ./pkgs/applications/editors/vscode/update-vscode.sh
        working-directory: "./nixpkgs"
      - run: git diff
        working-directory: "./nixpkgs"
      - run: nix-build -A vscode
        working-directory: "./nixpkgs"
      - env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        name: Create PR
        run: |
          PACKAGE="vscode" \
            TARGET_BRANCH="master" \
            TESTED_OTHER_LINUX="true" \
            PRE_VERSION=$PRE_VERSION \
            GH_TOKEN=$GH_TOKEN \
            GITHUB_WORKFLOW_URL="https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" \
            ./../nixpkgs-upkeep/create-pr.sh
        working-directory: "./nixpkgs"
  vscodium:
    runs-on: ubuntu-latest
    steps:
      - uses: "cachix/install-nix-action@v16"
        with:
          extra_nix_config: experimental-features = nix-command flakes
          nix_path: nixpkgs=channel:nixos-unstable
      - name: Checkout nixpkgs-upkeep
        uses: "actions/checkout@v2"
        with:
          path: nixpkgs-upkeep
      - name: Checkout nixpkgs
        uses: "actions/checkout@v2"
        with:
          path: nixpkgs
          repository: NixOS/nixpkgs
          token: "${{ secrets.GH_TOKEN }}"
      - name: Check current package version
        run: |
          PACKAGE="vscodium"
          PRE_VERSION="$(nix eval --raw -f . $PACKAGE.version)"
          echo "PACKAGE=$PACKAGE" >> $GITHUB_ENV
          echo "PRE_VERSION=$PRE_VERSION" >> $GITHUB_ENV
        working-directory: "./nixpkgs"
      - name: Run custom update-script
        run: |
          ./nixpkgs/pkgs/applications/editors/vscode/update-vscodium.sh
      - run: git diff
        working-directory: "./nixpkgs"
      - run: nix-build -A vscodium
        working-directory: "./nixpkgs"
      - env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        name: Create PR
        run: |
          PACKAGE="vscodium" \
            TARGET_BRANCH="master" \
            TESTED_OTHER_LINUX="true" \
            PRE_VERSION=$PRE_VERSION \
            GH_TOKEN=$GH_TOKEN \
            GITHUB_WORKFLOW_URL="https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" \
            ./../nixpkgs-upkeep/create-pr.sh
        working-directory: "./nixpkgs"
  wandb:
    runs-on: ubuntu-latest
    steps:
      - uses: "cachix/install-nix-action@v16"
        with:
          extra_nix_config: experimental-features = nix-command flakes
          nix_path: nixpkgs=channel:nixos-unstable
      - name: Checkout nixpkgs-upkeep
        uses: "actions/checkout@v2"
        with:
          path: nixpkgs-upkeep
      - name: Checkout nixpkgs
        uses: "actions/checkout@v2"
        with:
          path: nixpkgs
          repository: NixOS/nixpkgs
          token: "${{ secrets.GH_TOKEN }}"
      - name: Check current package version
        run: |
          PACKAGE="python3Packages.wandb"
          PRE_VERSION="$(nix eval --raw -f . $PACKAGE.version)"
          echo "PACKAGE=$PACKAGE" >> $GITHUB_ENV
          echo "PRE_VERSION=$PRE_VERSION" >> $GITHUB_ENV
        working-directory: "./nixpkgs"
      - env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        name: build canary
        run: |
          GH_TOKEN=$GH_TOKEN ./canary.py --nixpkgs ../nixpkgs --attr $PACKAGE
        working-directory: "./nixpkgs-upkeep"
      - name: Run custom update-script
        run: |
          cp nixpkgs-upkeep/update-wandb.py nixpkgs/pkgs/development/python-modules/wandb/update-wandb.py
          ./nixpkgs/pkgs/development/python-modules/wandb/update-wandb.py
          rm nixpkgs/pkgs/development/python-modules/wandb/update-wandb.py
      - run: git diff
        working-directory: "./nixpkgs"
      - run: nix-build -A python3Packages.wandb
        working-directory: "./nixpkgs"
      - env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        name: Create PR
        run: |
          GH_TOKEN=$GH_TOKEN \
            TARGET_BRANCH="master" \
            PACKAGE=$PACKAGE \
            PRE_VERSION=$PRE_VERSION \
            TESTED_OTHER_LINUX="true" \
            GITHUB_WORKFLOW_URL="https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" \
            ./../nixpkgs-upkeep/create-pr.sh
        working-directory: "./nixpkgs"
name: upkeep
on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 0,12 * * *"
